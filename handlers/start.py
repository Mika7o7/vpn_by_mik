from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import BufferedInputFile
from keyboards.inline_keyboards import white_rebit
from database import add_user

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
start_router = Router()

@start_router.message(Command("start"))
async def start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

    text = (
        "‚ò†Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É, –í—ã—Ö–æ–¥ –∏–∑ –ú–∞—Ç—Ä–∏—Ü—ã.\n\n"
        "üìü –¢–≤–æ–π –¥–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. –¢–µ–±–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤–∏–¥–µ—Ç—å.\n"
        "üíæ –í—Å—è —Ç–≤–æ—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è. –í—Å–µ —Ç–≤–æ–∏ –¥–≤–∏–∂–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è.\n\n"
        "üñ•Ô∏è –¢—ã —ç—Ç–æ —á—É–≤—Å—Ç–≤—É–µ—à—å, –≤–µ—Ä–Ω–æ? –≠—Ç–æ—Ç –º–∏—Ä... –æ–Ω –Ω–µ–Ω–∞—Å—Ç–æ—è—â–∏–π. –û–Ω —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–±—è.\n"
        "–ù–æ –µ—Å—Ç—å –¥—Ä—É–≥–æ–π –ø—É—Ç—å. –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.\n\n"
        "üëâ –°–ª–µ–¥—É–π –∑–∞ –±–µ–ª—ã–º –∫—Ä–æ–ª–∏–∫–æ–º."
    )
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º BufferedInputFile –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞
        with open("bg.jpeg", "rb") as file:
            photo = BufferedInputFile(file.read(), filename="bg.jpeg")
        await message.answer_photo(
            photo=photo,
            caption=text,
            reply_markup=white_rebit
        )
    except FileNotFoundError:
        await message.answer("–§–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")